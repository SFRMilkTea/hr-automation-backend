plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'com.palantir.docker' version '0.34.0'
}

group = 'com.example'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenLocal()
    mavenCentral()
}

docker {
    name "hr-automation"
    dockerfile file('Dockerfile')
    copySpec.from(jar).rename(".*", "app.jar")
    buildArgs(['JAR_FILE': "app.jar"])
}

dependencies {
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.projectlombok:lombok:1.18.26'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.429'
    implementation 'org.apache.poi:poi:5.2.2'
    implementation 'commons-io:commons-io:2.11.0'

    implementation 'com.google.maps:google-maps-services:2.1.2'


//    implementation 'com.google.firebase:firebase-admin:9.1.1'
//    implementation 'com.google.firebase:firebase-admin:9.1.1'

}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(

                'Main-Class': 'com.example.hrautomationbackend.HrAutomationBackendApplication'
        )
    }
}